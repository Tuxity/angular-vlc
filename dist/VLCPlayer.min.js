/*! VLCPlayer 2014-11-15 10:11:50 */
angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(){b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-keydown="vlcKeyEvent($event);">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(){b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0" ng-keydown="vlcKeyEvent($event);">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){27==a.keyCode&&b.vlcToggleFullscreen,b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0" ng-keydown="vlcKeyEvent($event);">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(){b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0" ng-keydown="vlcKeyEvent($event);">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();
var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){27==a.keyCode&&(console.log("sdfdsfsfd"),b.vlcKeyEvent(27)),b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0" ng-keydown="vlcKeyEvent($event);">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){27==a.keyCode&&(console.log("sdfdsfsfd"),vlcKeyEvent(27)),b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0" ng-keydown="vlcKeyEvent($event);">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){if(27==a.keyCode){var c=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},b.vlc.playlist.play(),b.vlc.input.position=c;var c=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},b.vlc.playlist.play(),b.vlc.input.position=c}b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0" ng-keydown="vlcKeyEvent($event);">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){if(27==a.keyCode){var c=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},b.vlc.playlist.play(),b.vlc.input.position=c}b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0" ng-keydown="vlcKeyEvent($event);">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);
"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){27==a.keyCode&&console.log("dfsfsdffsd"),b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0" ng-keydown="vlcKeyEvent($event);">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(){b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0" ng-keydown="vlcKeyEvent($event);">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(){b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0" ng-keydown="vlcKeyEvent($event);">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(){b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0" ng-keydown="vlcKeyEvent($event);">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){if(27==a.keyCode&&document.fullscreenElement&&document.mozFullScreenElement&&document.webkitFullscreenElement){console.log("wxfqsdfs");
var c=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen(),b.vlc.playlist.play(),b.vlc.input.position=c}},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0" ng-keydown="vlcKeyEvent($event);">\n            <embed tabindex="0" ng-keydown="vlcKeyEvent($event);" pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){if(27==a.keyCode&&document.fullscreenElement&&document.mozFullScreenElement&&document.webkitFullscreenElement){console.log("wxfqsdfs");var c=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen(),b.vlc.playlist.play(),b.vlc.input.position=c}},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" tabindex="0" ng-keydown="vlcKeyEvent($event);" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){if(27==a.keyCode&&document.fullscreenElement&&document.mozFullScreenElement&&document.webkitFullscreenElement){var c=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen(),b.vlc.playlist.play(),b.vlc.input.position=c}},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" tabindex="0" ng-keydown="vlcKeyEvent($event);" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){if(27==a.keyCode&&!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement){var c=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen(),b.vlc.playlist.play(),b.vlc.input.position=c}},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" tabindex="0" ng-keydown="vlcKeyEvent($event);" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)
})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){27==a.keyCode&&b.vlcToggleFullscreen()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" tabindex="0" ng-keydown="vlcKeyEvent($event);" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){console.log("wddf"),27==a.keyCode&&(console.log("wddf"),b.vlcToggleFullscreen())},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" tabindex="0" ng-keydown="vlcKeyEvent($event);" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){console.log("wddf"),27===a.which&&(console.log("wddf"),b.vlcToggleFullscreen())},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" tabindex="0" ng-keypress="vlcKeyEvent($event);" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(){console.log("wddf"),27===eve.which&&(console.log("wddf"),b.vlcToggleFullscreen())},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" tabindex="0" ng-keypress="vlcKeyEvent($event);" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}
},e,!0),b.vlcKeyEvent=function(){27===eve.which&&(console.log("wddf"),b.vlcToggleFullscreen())},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" tabindex="0" ng-keypress="vlcKeyEvent($event);" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" tabindex="0" ng-keypress="{esc: \'vlcTogglePause()\'}" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" tabindex="0" ng-keypress="{27: \'vlcTogglePause()\'}" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" tabindex="0" ng-keypress="{e.keyCode == 27: \'vlcTogglePause()\'}" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a
},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" tabindex="0" ng-keypress="{esc: \'vlcTogglePause()\'}" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" tabindex="0" ng-keypress="vlcTogglePause();" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-keypress="vlcTogglePause();" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-keypress="{esc: \'vlcTogglePause()\'}" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ui-keyup="{esc: \'vlcTogglePause()\'}" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ui-keydown="{esc: \'vlcTogglePause()\'}" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ui-keydown="{esc: \'vlcToggleFullscreen()\'}" >\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}
}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcCancelFullScreen=function(){console.log("sdsqdqsdsd"),b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.fullscreen=!1,document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen(),vlcCancelFullScreen()):(b.vlc.fullscreen=!0,c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),0==b.vlc.fullscreen)){console.log("sdsqdqsdsd"),b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.fullscreen=!1,document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()):(b.vlc.fullscreen=!0,c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!(document.fullscreenElement||document.mozFullScreenElement||document.mozFullScreenEnabled||document.webkitFullscreenElement||1!=b.vlc.fullscreen))){console.log("sdsqdqsdsd"),b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&"player"==!document.mozFullScreenElement.nodeName&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){console.log("sdsqdqsdsd"),b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};
b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){console.log("sdsqdqsdsd"),b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width}},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width}},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width}},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width}},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width},b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width},b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width},b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),b.vlc.embedFullscreen={width:"1920",height:"1080"},!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"},b.vlc.embedFullscreen={width:"1920",height:"1080"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920px",height:"1080px"},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:"1920",height:"1080"},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"},b.vlc.embedFullscreen={width:screen.width,height:screen.height}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);
for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},console.log(screen.availWidth),console.log(window.screen.height)}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},console.log(window.screen.width),console.log(window.screen.height)}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},console.log(window.screen.width)}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);
for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},console.log(screen.width)}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="{{ vlc.embedFullscreen }}"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";
var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||1!=b.vlc.fullscreen||(b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"})),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);
return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcInactiveMouse=function(){var a;a&&(clearTimeout(a),a=0),a=setTimeout(function(){b.vlcToolbarActive(!1)},3e3)},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc){if(3==vlc.input.state){var a;a&&(clearTimeout(a),a=0),a=setTimeout(function(){b.vlcToolbarActive(!1)},5e3),b.vlc.openning=!1,b.vlc.buffer=!1,null==b.videoDuration&&(b.videoDuration=b.vlc.input.length)}if(7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var c=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=c}}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc){if(3==vlc.input.state){var a;a&&(clearTimeout(a),a=0),a=setTimeout(function(){b.vlcToolbarActive(!1)},5e3),b.vlc.openning=!1,b.vlc.buffer=!1,null==b.videoDuration&&(b.videoDuration=b.vlc.input.length)}if(7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var c=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=c}}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);
for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc){if(3==vlc.input.state&&null==b.videoDuration){b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1;var a;a&&(clearTimeout(a),a=0),a=setTimeout(function(){b.vlcToolbarActive(!1)},5e3)}if(7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var c=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=c}}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcInactiveMouse=function(){var a;a&&(clearTimeout(a),a=0),a=setTimeout(function(){b.vlcToolbarActive(!1)},5e3)},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]" ng-mousemove="vlcInactiveMouse();">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n                   ng-mouseover="vlcToolbarActive(true);" \n                   ng-mouseleave="vlcToolbarActive(false);"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcInactiveMouse=function(){var a;a&&(clearTimeout(a),a=0),a=setTimeout(function(){b.vlcToolbarActive(!1)},5e3)},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]" ng-mousemove="vlcInactiveMouse();">\n        <object ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);" classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcInactiveMouse=function(){var a;a&&(clearTimeout(a),a=0),a=setTimeout(function(){b.vlcToolbarActive(!1)},5e3)},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]" ng-mousemove="vlcInactiveMouse();">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcInactiveMouse=function(){var a;a&&(clearTimeout(a),a=0),a=setTimeout(function(){b.vlcToolbarActive(!1)},3e3)},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]" ng-mousemove="vlcInactiveMouse();">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcInactiveMouse=function(){var a;a&&(clearTimeout(a),a=0),a=setTimeout(function(){b.vlcToolbarActive(!1)},3e3)},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]" ng-mousemove="vlcInactiveMouse();">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcInactiveMouse=function(){var a;a&&(clearTimeout(a),a=0),a=setTimeout(function(){console.log("inactive mouse"),b.vlcToolbarActive(!1)},3e3)},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-mousemove="vlcInactiveMouse();" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcInactiveMouse=function(){var a;a&&(clearTimeout(a),a=0),a=setTimeout(function(){console.log("inactive mouse")},3e3)},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-mousemove="vlcInactiveMouse();" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1,b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("player");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n    <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls">\n        <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n            <div class="progress">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};
var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()
},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={overflow:"hidden",width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position,c=b.vlc.input.state;console.log(c),b.vlc.playlist.stop();var d=document.getElementById("vlc");d.requestFullscreen?d.requestFullscreen():d.msRequestFullscreen?d.msRequestFullscreen():d.mozRequestFullScreen?d.mozRequestFullScreen():d.webkitRequestFullscreen&&d.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position,c=b.vlc.input.state;console.log(c),b.vlc.playlist.stop();var d=document.getElementById("vlc");d.requestFullscreen?d.requestFullscreen():d.msRequestFullscreen?d.msRequestFullscreen():d.mozRequestFullScreen?d.mozRequestFullScreen():d.webkitRequestFullscreen&&d.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};
var a=b.vlc.input.position,c=b.vlc.input.state;console.log(c),b.vlc.playlist.stop();var d=document.getElementById("vlc");d.requestFullscreen?d.requestFullscreen():d.msRequestFullscreen?d.msRequestFullscreen():d.mozRequestFullScreen?d.mozRequestFullScreen():d.webkitRequestFullscreen&&d.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.input.state,b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=(b.vlc.input.position,b.vlc.input.state);console.log(a),b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position,c=b.vlc.input.state;b.vlc.playlist.stop(),b.vlc.playlist.play(),4==c&&b.vlc.playlist.pause(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position,c=b.vlc.input.state;console.log(c),b.vlc.playlist.stop();var d=document.getElementById("vlc");d.requestFullscreen?d.requestFullscreen():d.msRequestFullscreen?d.msRequestFullscreen():d.mozRequestFullScreen?d.mozRequestFullScreen():d.webkitRequestFullscreen&&d.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.playlist.pause(),b.vlc.input.position=a,4==c&&b.vlc.playlist.pause()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position,c=b.vlc.input.state;b.vlc.playlist.stop(),b.vlc.playlist.play(),4==c&&b.vlc.playlist.pause(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position,c=b.vlc.input.state;console.log(c),b.vlc.playlist.stop();var d=document.getElementById("vlc");d.requestFullscreen?d.requestFullscreen():d.msRequestFullscreen?d.msRequestFullscreen():d.mozRequestFullScreen?d.mozRequestFullScreen():d.webkitRequestFullscreen&&d.webkitRequestFullscreen(),b.vlc.playlist.pause(),b.vlc.input.position=a,4==c&&b.vlc.playlist.pause()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position,c=b.vlc.input.state;b.vlc.playlist.stop(),b.vlc.playlist.play(),4==c&&b.vlc.playlist.pause(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};
var a=b.vlc.input.position,c=b.vlc.input.state;console.log(c),b.vlc.playlist.stop();var d=document.getElementById("vlc");d.requestFullscreen?d.requestFullscreen():d.msRequestFullscreen?d.msRequestFullscreen():d.mozRequestFullScreen?d.mozRequestFullScreen():d.webkitRequestFullscreen&&d.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a,4==c&&b.vlc.playlist.pause()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position,c=b.vlc.input.state;b.vlc.playlist.stop(),b.vlc.playlist.play(),4==c&&b.vlc.playlist.pause(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position,c=b.vlc.input.state;console.log(c),b.vlc.playlist.stop();var d=document.getElementById("vlc");d.requestFullscreen?d.requestFullscreen():d.msRequestFullscreen?d.msRequestFullscreen():d.mozRequestFullScreen?d.mozRequestFullScreen():d.webkitRequestFullscreen&&d.webkitRequestFullscreen(),b.vlc.playlist.play(),4==c&&(console.log("wxcwxc"),b.vlc.playlist.pause()),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position,c=b.vlc.input.state;b.vlc.playlist.stop(),b.vlc.playlist.play(),4==c&&b.vlc.playlist.pause(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position,c=b.vlc.input.state;console.log(c),b.vlc.playlist.stop();var d=document.getElementById("vlc");d.requestFullscreen?d.requestFullscreen():d.msRequestFullscreen?d.msRequestFullscreen():d.mozRequestFullScreen?d.mozRequestFullScreen():d.webkitRequestFullscreen&&d.webkitRequestFullscreen(),b.vlc.playlist.play(),4==c&&b.vlc.playlist.pause(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position,c=b.vlc.input.state;console.log(c),b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position,c=b.vlc.input.state;console.log(c),b.vlc.playlist.stop();var d=document.getElementById("vlc");d.requestFullscreen?d.requestFullscreen():d.msRequestFullscreen?d.msRequestFullscreen():d.mozRequestFullScreen?d.mozRequestFullScreen():d.webkitRequestFullscreen&&d.webkitRequestFullscreen(),3==c&&b.vlc.playlist.play(),4==c&&b.vlc.playlist.pause(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.input.state,b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};
var a=b.vlc.input.position;b.vlc.input.state,b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position,c=b.vlc.input.state;b.vlc.playlist.stop(),3==c&&b.vlc.playlist.play(),4==c&&b.vlc.playlist.pause(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position,c=b.vlc.input.state;b.vlc.playlist.stop();var d=document.getElementById("vlc");d.requestFullscreen?d.requestFullscreen():d.msRequestFullscreen?d.msRequestFullscreen():d.mozRequestFullScreen?d.mozRequestFullScreen():d.webkitRequestFullscreen&&d.webkitRequestFullscreen(),3==c&&b.vlc.playlist.play(),4==c&&b.vlc.playlist.pause(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.input.state,b.vlc.playlist.stop(),3==b.vlc.input.state&&b.vlc.playlist.play(),4==b.vlc.input.state&&b.vlc.playlist.pause(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.input.state,b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),3==b.vlc.input.state&&b.vlc.playlist.play(),4==b.vlc.input.state&&b.vlc.playlist.pause(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.input.state,b.vlc.playlist.stop(),3==b.vlc.input.state&&b.vlc.playlist.play(),4==b.vlc.input.state&&b.vlc.playlist.pause(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};
var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       class="embed-fullscreen"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="embed-fullscreen"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),console.log(screen.height),console.log(screen.width),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a
},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),console.log(screen.height),console.log(screen.width),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.width,height:screen.height};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\'}[vlc.fullscreen == false]"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),console.log(screen.height),console.log(screen.width),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1,b.vlc.embedFullscreen={width:"640",height:"360"};var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.height,height:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\'}[vlc.fullscreen == false]"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),console.log(screen.height),console.log(screen.width),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1;var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.embedFullscreen={width:screen.height,height:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\'}[vlc.fullscreen == false]"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),console.log(screen.height),console.log(screen.width),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1;var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.embedFullscreen={width:screen.height,height:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)
})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\'}[vlc.fullscreen == false]"\n                       ng-style="vlc.embedFullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),console.log(screen.height),console.log(screen.width),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1;var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.embed-fullscreen={width:screen.height,height:screen.width};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\'}[vlc.fullscreen == false]"\n                       ng-style="vlc.embed-fullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),console.log(screen.height),console.log(screen.width),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1;var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.embed-fullscreen={width:"screen.height",height:"screen.width;"};var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\'}[vlc.fullscreen == false]"\n                       ng-style="vlc.embed-fullscreen"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),console.log(screen.height),console.log(screen.width),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1;var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),console.log($(window).height()),console.log($(document).height()),console.log($(window).width()),console.log($(document).width()),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1;var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1;var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&1==b.vlc.fullscreen)){b.vlc.fullscreen=!1;var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||(b.vlc.fullscreen=!1)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){if(b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement)){b.vlc.fullscreen=!1;var a=b.vlc.input.position;b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a}return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();
var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||(b.vlc.fullscreen=!1)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),console.log(document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?"fullscreen":"NON fullscreen")),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0),console.log(vlc.video.fullscreen)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.input.position,b.vlc.playlist.stop();var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen(),b.vlc.playlist.play()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.input.position,b.vlc.playlist.stop();var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen(),b.vlc.playlist.play()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)
})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.input.position,b.vlc.playlist.stop();var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen(),b.vlc.playlist.play()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.input.position,b.vlc.playlist.stop();var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen(),b.vlc.playlist.play()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.input.position,b.vlc.playlist.stop();var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen(),b.vlc.playlist.play()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.input.position,b.vlc.playlist.stop();var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen(),b.vlc.playlist.play()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.input.position,b.vlc.playlist.stop();var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen(),b.vlc.playlist.play()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0,b.vlc.input.position,b.vlc.playlist.stop();var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen(),b.vlc.playlist.play()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.input.position,b.vlc.playlist.stop();var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen(),b.vlc.playlist.play()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;b.vlc.playlist.stop();var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen(),b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;
console.log(a),b.vlc.playlist.stop(),b.vlc.playlist.play(),b.vlc.input.position=a;var c=document.getElementById("vlc");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\', false: \'embed-fullscreen\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: \'embed\'}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       ng-class="{true: embed}[vlc.fullscreen == false]"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                       class="embed"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       height="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       width="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       width="640"\n                       width="360"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="640" height="360">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="640" height="360">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("#vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("#vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="640" height="360">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="640" height="360">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="640" height="360">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.width="640",b.vlc.height="360"}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.width="100%",b.vlc.height="100%";var a=document.querySelector.bind(document),c=a("#vlc"),d=c.requestFullScreen||c.mozRequestFullScreen||c.webkitRequestFullScreen;d&&d.bind(c)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="{{ vlc.width }}"\n                       height="{{ vlc.height }}"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.width="100%",b.vlc.height="100%";var a=document.querySelector.bind(document),c=a("#vlc"),d=c.requestFullScreen||c.mozRequestFullScreen||c.webkitRequestFullScreen;d&&d.bind(c)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="{{ vlc.width }}"\n                       height="{{ vlc.height }}"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen(),console.log(b.vlc.video.toggleFullscreen())},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen(),console.log(b.vlc.video.toggleFullscreen())},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.windowless=a.windowless}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay,windowless:d.vlcWindowless}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document);b.vlc.windowless="false";var c=a("#vlc"),d=c.requestFullScreen||c.mozRequestFullScreen||c.webkitRequestFullScreen;d&&d.bind(c)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="{{ vlc.windowless }}"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.width=a.width,b.vlc.height=a.height}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay,width:d.vlcWidth,height:d.vlcHeight}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document);b.vlc.width="500",b.vlc.height="500";var c=a("#vlc"),d=c.requestFullScreen||c.mozRequestFullScreen||c.webkitRequestFullScreen;d&&d.bind(c)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="{{ vlc.width }}"\n                       height="{{ vlc.height }}"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.width=a.width,b.vlc.height=a.height}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay,width:d.vlcWidth,height:d.vlcHeight}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document);b.vlc.width="100%",b.vlc.height="100%";var c=a("#vlc"),d=c.requestFullScreen||c.mozRequestFullScreen||c.webkitRequestFullScreen;d&&d.bind(c)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="{{ vlc.width }}"\n                       height="{{ vlc.height }}"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.width=a.width,b.vlc.height=a.height}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay,width:d.vlcWidth,height:d.vlcHeight}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="{{ vlc.width }}"\n                       height="{{ vlc.height }}"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a(playerWrapperClass),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a(playerWrapperClass),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="640"\n                       height="360"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById(".video-container");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById(".video");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" class="video">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.getElementById("#vlc");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.windowless="true"}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="{{ vlc.windowless }}"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc={},b.vlc.windowless="true",b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="{{ vlc.windowless }}"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc.windowless="true",b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="{{ vlc.windowless }}"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="{{ vlc.windowless }}"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear",":windowless=true"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,"windowless=true",c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="{{ vlc.windowless }}"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=b.vlc.playlist.add(a.url,a.filename,options);"true"==a.autoplay&&b.vlc.playlist.playItem(c),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="{{ vlc.windowless }}"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.windowless="true",b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="{{ vlc.windowless }}"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.windowless="true"}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="{{ vlc.windowless }}"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.windowless="true"}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="{{ vlc.windowless }}"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.windowless="true"}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.windowless="true"}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="{{ vlc.windowless }}"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.windowless="true"}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.windowless="false",b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="{{ vlc.windowless }}"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.windowless="false",b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="{{ vlc.windowless }}"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.windowless="false",b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div ng-class="{true: \'player-container\', false: \'player-container-full\'}[vlc.fullscreen == false]" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen(),console.log(b.vlc.video.toggleFullscreen())},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div ng-class="{true: \'player-container\', false: \'player-container-full\'}[vlc.fullscreen == false]" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen(),console.log(b.vlc.video.toggleFullscreen())},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div ng-class="{true: \'player-container\', false: \'player-container-full\'}[vlc.fullscreen == false]" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen(),console.log(b.vlc.video.toggleFullscreen())},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div ng-class="{true: \'player-container\', false: \'player-container-full\'}[vlc.fullscreen == false]" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen(),console.log(b.vlc.video.toggleFullscreen())},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div ng-class="{true: \'player-container\', false: \'player-container-full\'}[vlc.fullscreen == false]" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen(),console.log(b.vlc.video.toggleFullscreen())},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div ng-class="{true: \'player-container\', false: \'player-container-full\'}[vlc.fullscreen == false]" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen(),console.log(b.vlc.video.toggleFullscreen())},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div ng-class="{true: \'player-container\', false: \'player-container-full\'}[vlc.fullscreen == false]" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen(),console.log(b.vlc.video.toggleFullscreen())},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div ng-class="{true: \'player-container\', false: \'player-container-full\'}[vlc.fullscreen == false]" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen(),console.log(b.vlc.video.toggleFullscreen())},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div ng-class="{true: \'player-container\', false: \'player-container-full\'}[vlc.fullscreen == false]" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.fullscreen=!1}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=document.querySelector.bind(document),c=a(".player"),d=c.requestFullScreen||c.mozRequestFullScreen||c.webkitRequestFullScreen;d&&d.bind(c)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div ng-class="{true: \'player-container\', false: \'player-container-full\'}[vlc.fullscreen == false]" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.fullscreen=!0;var a=document.querySelector.bind(document),c=a(".player"),d=c.requestFullScreen||c.mozRequestFullScreen||c.webkitRequestFullScreen;d&&d.bind(c)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div ng-class="{true: \'player-container\', false: \'player-container-full\'}[vlc.fullscreen == false]" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a(".player"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a(".player"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a(".player"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a(".player"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a(".player"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a(".player"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a(".player"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a(".player"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a(".player-container"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen(),console.log(b.vlc.video.toggleFullscreen())},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){vlc.video.fullscreen=1},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a,console.log(a),console.log(vlc.subtitle.track)},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                            <li><a href=""> VLC {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                            <li><a href=""> VLC{{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo()}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlc&&(b.vlc.version=b.vlc.versionInfo(),console.log(vlc.version)),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                            <li><a href=""> VLC version {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlc&&(b.vlc.version=b.vlc.versionInfo(),console.log(vlc.version)),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                            <li><a href=""> VLC version {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlc&&(b.vlc.version=b.vlc.versionInfo()),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                            <li><a href=""> VLC version {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlc.version=b.vlc.versionInfo(),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                            <li><a href=""> VLC version {{ vlc.version }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},b.vlcVersion=function(){console.log(b.vlc.versionInfo()),b.vlc.versionInfo()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                            <li><a href="" ng-click="vlcVersion()"> VLC version </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},b.vlcVersion=function(){b.vlc.versionInfo()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                            <li><a href=""> VLC version {{ vlcVersion(); }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},b.vlcVersion=function(){b.vlc.versionInfo()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                            <li><a href=""> VLC version {{ vlc.versionInfo(); }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},b.vlcVersion=function(){b.vlc.versionInfo()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                            <li><a href=""> VLC version {{ scope.vlc.versionInfo(); }}</a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},b.vlcVersion=function(){b.vlc.versionInfo()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                            <li><a href="" ng-click="vlcVersion()"> VLC version </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                    <slider ng-model="sliders.sliderValue" min="0" step="1" max="100" value="{{ vlc.timer }}"></slider>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                    <slider ng-model="sliders.sliderValue" min="0" step="1" max="100" value="50"></slider>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                    <input type="range" min="0" max="100"  step="0.2" />\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                    <input type="range" min="0" max="100" value="{{ vlc.timer }}" step="0.2" />\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                    <input type="range" min="0" max="100" value="{{ vlc.timer }}" step="0.2" />\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                    <input type="range" min="0" max="100" value="{{ vlc.timer }}" step="0.2" />\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                    <input type="range" min="0" max="100" value="{{ vlc.timer }}" step="0.2" />\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <input type="range" min="0" max="100" value="{{ vlc.timer }}" step="0.2" />\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <input type="range" min="0" max="100" value="{{ vlc.timer }}" step="0.2" />\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <input type="range" min="0" max="100" value="{{ vlc.timer }}" step="1" />\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.sliders.sliderValue=0,b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n <slider ng-model="sliders.sliderValue" min="0" step="1" max="100" value="{{ vlc.timer }}"></slider>\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n <slider min="0" step="1" max="100" value="{{ vlc.timer }}"></slider>\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n <slider min="0" step="1" max="100" value="{{ vlc.timer }}"></slider>\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<slider min="0" step="1" max="100" value="{{ vlc.timer }}"></slider>\n\n<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <slider min="0" step="1" max="100" value="{{ vlc.timer }}"></slider>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <slider min="0" step="1" max="100" value="50"></slider>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <slider min="0" step="1" max="100" value="5"></slider>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(4==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  \n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(4==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <slider min="0" step="1" max="100" value="5"></slider>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(4==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <slider min="0" step="1" max="100" value="5"></slider>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(4==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.sliders={},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <slider ng-model="sliders.sliderValue" min="0" step="1" max="100" value="5"></slider>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(4==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(4==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(4==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == false]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),b=a("#vlc"),c=b.requestFullScreen||b.mozRequestFullScreen||b.webkitRequestFullScreen;c&&c.bind(b)()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=document.querySelector.bind(document),c=a("#vlc"),d=c.requestFullScreen||c.mozRequestFullScreen||c.webkitRequestFullScreen;d&&d.bind(c)(),b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=queryAll("#vlc"),c=a.requestFullScreen||a.mozRequestFullScreen||a.webkitRequestFullScreen;c&&c.bind(a)(),b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="false"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="false"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" data-toggle="tooltip" data-placement="top" title="28.30" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" tooltip="28.30" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" tooltip="{{ videoCurrentTime | time2String }}" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.fullscreen=!0,b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.fullscreen=!0,b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       allowfullscreen="true"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div class="progress">\n                  <div class="progress-bar" role="progressbar" aria-valuenow="{{ scope.vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( scope.vlc.timer + \'%\' ) }">\n                  </div>\n                </div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div ui-slider="vlc.timer" min="0" max="100"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div min="0" max="100" ng-model="vlc.timer"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div range-slider min="0" max="100" model-max="vlc.timer" pin-handle="min" show-values="false"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div range-slider min="0" max="100" model-max="vlc.timer" pin-handle="min" show-values="false"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div range-slider min="0" max="100" model-max="vlc.timer" pin-handle="min" show-values="false"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div range-slider min="0" max="100" model-max="vlc.timer" pin-handle="min" show-values="false"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div range-slider min="0" max="100" model-max="vlc.timer" pin-handle="min" show-values="false"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div range-slider min="0" max="100" model-max="vlc.timer" pin-handle="min" show-values="false"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div range-slider min="0" max="100" model-max="vlc.timer" pin-handle="min" show-values="false"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div range-slider min="0" max="100" model-max="vlc.timer" pin-handle="min"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div range-slider min="0" max="100" model-max="vlc.timer" pin-handle="min"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),$scope.vlc={timer:50}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div range-slider min="0" max="100" model-max="vlc.timer" pin-handle="min"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),$scope.vlc={timer:50},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div range-slider min="0" max="100" model-max="vlc.timer" pin-handle="min"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),$scope.player={timer:50},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div range-slider min="0" max="100" model-max="player.timer" pin-handle="min"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n                <div range-slider min="0" max="100" model-min="min" model-max="max"></div>\n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d)}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&null==b.videoDuration&&(b.videoDuration=b.vlc.input.length,b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player">\n    <div class="player-container" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="video-container" ng-class="{true: \'player-blur\' }[vlc.buffer == true]">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       windowless="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar" ng-class="{true: \'toolbar-active\', false: \'toolbar-disabled\'}[vlc.error == true || vlc.toolbar == true]">\n               \n                <div class="form-inline pull-left">\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                        <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                    </button>\n                    <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                </div>\n                <div class="form-inline pull-right">\n                    <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group dropup" dropdown>\n                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" tooltip="Parameters">\n                            <span class="glyphicon glyphicon-cog"></span>\n                        </button>\n                        <ul class="dropdown-menu">\n                            <li><a href=""> About angular-vlc </a></li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class="error-vlc" ng-if="vlc.error">\n            <p>There is an error with the link your given...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.buffer">\n            <p>Video is actually buffering, please wait...</p>\n        </div>\n        <div class="error-vlc" ng-if="vlc.openning">\n            <p>Video will be open in few seconds...</p>\n        </div>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>hour?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);for("true"==a.autoplay&&b.vlc.playlist.playItem(d);0==b.vlc.input.hasVout;);b.videoDuration=b.vlc.input.length}};b.$watch(function(){return{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){b.vlc.video.toggleFullscreen()},a.callFnOnInterval(function(){b.videoCurrentTime=b.vlc.input.time})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div>\n    <div class="video-container">\n        <div class="video">\n            <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%">\n                <embed pluginspage="http://www.videolan.org"\n                       type="application/x-vlc-plugin"\n                       version="VideoLAN.VLCPlugin.2"\n                       width="100%"\n                       height="100%"\n                       toolbar="false"\n                       branding="true"\n                       id="vlc"\n                ></embed>\n            </object>\n        </div>\n        <div class="video-controls">\n            <div class="toolbar">\n                <button type="button" class="btn btn-default pull-left" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span>{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n                <div class="form-inline pull-right">\n                    <button type="button" class="btn btn-default" ng-click="vlcToggleMute()">\n                        <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                    </button>\n                    <div class="btn-group">\n                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-sound-5-1"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.audio.count">\n                                <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                    {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class="btn-group">\n                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">\n                            <span class="glyphicon glyphicon-subtitles"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                                <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                    {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <button type="button" class="btn btn-default" ng-click="vlcToggleFullscreen()">\n                        <span class="glyphicon glyphicon-resize-full"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n')}]);